version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: gempos-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: gempos-db
      MYSQL_USER: gempos
      MYSQL_PASSWORD: password123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - gempos-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: gempos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - gempos-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build: .
    container_name: gempos-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: rootpassword
      DATABASE_NAME: gempos-db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gempos-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: gempos-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl
    depends_on:
      - api
    networks:
      - gempos-network

volumes:
  mysql_data:

networks:
  gempos-network:
    driver: bridge
